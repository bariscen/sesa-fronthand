

import streamlit as st
import numpy as np
import pandas as pd
import os
from pathlib import Path
import requests
import time
import pickle
import streamlit as st
from app.function import read_gcs_blob_content
import json

### SIDE BAR KAPAMA BASLIYOR

st.set_page_config(initial_sidebar_state="collapsed")

st.markdown(
    """
<style>
    [data-testid="collapsedControl"] {
        display: none
    }
</style>
""",
    unsafe_allow_html=True,
)

st.markdown("""
    <style>
    /* MenÃ¼ (sidebar navigation) gizle */
    section[data-testid="stSidebarNav"] {
        display: none;
    }
    /* SaÄŸ Ã¼stteki hamburger menÃ¼ gizle */
    button[title="Toggle sidebar"] {
        display: none;
    }
    </style>
""", unsafe_allow_html=True)

st.markdown("""
    <style>
    #MainMenu {visibility: hidden;}
    header {visibility: hidden;}
    footer {visibility: hidden;}
    </style>
""", unsafe_allow_html=True)


### SIDE BAR KAPAMA BÄ°TTÄ°

# Bu dosyanÄ±n bulunduÄŸu dizin (app.py'nin dizini)
current_dir = Path(__file__).parent.parent

# row-data yolunu oluÅŸtur
image_path_for_logo = current_dir.parent / "row-data" / "sesa-logo-80-new.png"

# Logonun her sayfada gÃ¶sterilmesi iÃ§in session_state'e kaydet
if 'logo_image_path' not in st.session_state:
    st.session_state.logo_image_path = str(image_path_for_logo)

# Ana sayfada logoyu gÃ¶ster (isteÄŸe baÄŸlÄ±, sayfalarda da gÃ¶sterebilirsin)
st.image(st.session_state.logo_image_path, width=200)

st.markdown("""
    <style>
    .stApp {
        background-color: #d3d3d3; /* 1 ton aÃ§Ä±k gri */
    }
    </style>
    """, unsafe_allow_html=True)



gunler = read_gcs_blob_content("stat")

if gunler is not None:
    st.write("Veri Seti YÃ¼klendi. âœ…")

else:
    st.error("Dikkat verisi Ã§ekilemedi.")



if gunler is not None:
    df_gecen = gunler["GeÃ§en Seneki Ä°lk 50 MÃ¼ÅŸteri (GÃ¼nÃ¼mÃ¼ze kadar)"]
    df_gecen.columns = ["Musteri", "kg_2024"]

    df_bu = gunler["Bu Seneki Ä°lk 50 MÃ¼ÅŸteri (GÃ¼nÃ¼mÃ¼ze kadar)"]
    df_bu.columns = ['Musteri', "kg_2025"]


    comp_df = gunler["GeÃ§en Sene ve Bu Sene Ä°lk 50 MÃ¼ÅŸteri KarÅŸÄ±laÅŸtÄ±rma (GÃ¼nÃ¼mÃ¼ze kadar)"]['GeÃ§en Seneki ve Bu Seneki Ä°lk 50 MÃ¼ÅŸterinin KarÅŸÄ±laÅŸtÄ±rmasÄ±: ']

    st.subheader("ğŸ“† 2024 - Ä°lk 50 MÃ¼ÅŸteri")
    st.dataframe(df_gecen)

    st.subheader("ğŸ“† 2025 - Ä°lk 50 MÃ¼ÅŸteri")
    st.dataframe(df_bu)

    st.subheader("ğŸ“Š 2024 ile 2025 ilk 50 MÃ¼ÅŸteri KarÅŸÄ±laÅŸtÄ±rma (GÃ¼nÃ¼mÃ¼ze kadar)")
    st.dataframe(comp_df)

    stat = gunler["GeÃ§en Sene ve Bu Sene Ä°lk 50 MÃ¼ÅŸteri KarÅŸÄ±laÅŸtÄ±rma (GÃ¼nÃ¼mÃ¼ze kadar)"]

    st.write(f"ğŸ“¦ Toplam kg 2024: {round(stat['GeÃ§en Seneki ilk 50 MÃ¼ÅŸterinin toplam KG (GÃ¼nÃ¼mÃ¼ze kadar): '])}")
    st.write(f"ğŸ“¦ Toplam kg 2025: {round(stat['Bu Seneki ilk 50 MÃ¼ÅŸterinin toplam KG: '])}")
else:
    st.write("GÃ¶sterilecek Ä°lk 50 gÃ¼n karÅŸÄ±laÅŸtÄ±rma verisi yok.")
